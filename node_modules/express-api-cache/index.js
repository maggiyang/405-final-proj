var apiCache = function(client) {
  return function(req, res, next) {
    var query = '';
    query = query.concat(
      JSON.stringify(req.path), 
      JSON.stringify(req.params), 
      JSON.stringify(req.query), 
      JSON.stringify(req.body)
    );
    client.get(query, function(err, reply) {
      if (err) {
        return next(err);
      }
      else if (!reply) {
        req.redisQuery = query;
        return next();
      }
      else if (reply) {
        return res.send(reply);
      }
    })    
  }
}


var cacheValue = function(opts, cb) {
  if (typeof opts !== 'object') throw new Error('you need some options as the first parameter.');
  if (typeof cb !== 'function') throw new Error('Need to include a callback as the second parameter.');
  if (!opts.client) throw new Error('Need to include the redis client');
  if (!opts.query) throw new Error('Need to include a redis query');
  if (!opts.data) throw new Error('Need to include some kind of data');

  opts.time = opts.time || 7200;

  opts.client.set(opts.query, opts.data, 'EX', opts.time, function(err) {
    cb(err, opts.data);
  })
}

exports.apiCache = apiCache;
exports.cacheValue = cacheValue;